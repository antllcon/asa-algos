                    2.2. Линейные списки

   Общими требованиями к лабораторной работе являются:
   1) организовать  ввод  данных  из  файла  в   понятной  для 
пользователя форме;
   2) обеспечить   возможность   многократных   запросов   без
повторного запуска программы;
   3) при реализации в С++ не использовать контейнерные классы
для работы с линейными списками типа stack, queue и т. п.

   1. Автомобильная  стоянка  вмещает  N  машин  и  имеет одну
полосу с единственным въездом-выездом.  Если владелец приходит
за  машиной,  временно  выезжают и потом возвращаются в том же
порядке  все  машины,  загораживающие  проезд.  Если   стоянка
заполнена,     то    прибывшая    машина    уезжает.    Задана
последовательность номеров машин  с  признаками  прибытия  или
убытия.  Составить  протокол работы стоянки,  сообщая обо всех
событиях (6).

   2. Автостоянка содержит одну полосу,  на которой может быть
размещено до N машин.  Имеется план прибытия и убытия машин на
стоянку.  Если  в момент прибытия стоянка оказывается занятой,
машина уезжает восвояси.  Машины въезжают с южной  стороны,  а
могут  выехать  из K (K<N) крайних мест северной стороны.  При
выезде машины очередь сдвигается с юга на север. Требуется:
   1) промоделировать работу стоянки,  последовательно сообщая
о приходе и  убытии  машин  с  выдачей  информации  о  стоящих
машинах;
   2) выдать два списка номеров машин:  тех, которые не смогли
встать на стоянку, и тех, что не смогли выехать вовремя (6).

   3. Составить  программу  работы  с  циклической   очередью,
организованной   с   помощью   массива.   Обеспечить  операции
постановки в очередь,  продвижения очереди, вставки в середину
после элемента с заданным ключом и удаления из середины (6).

   4. Два стека размещены в одном массиве и  растут  навстречу
друг  другу.  Задана  последовательность операций размещения и
удаления  элементов  с  указанием  номера  стека.   Обеспечить
выполнение  данных  операций  и  обработку аварийных ситуаций.
Сообщить в конце:
   1) какой  минимальный  резерв  памяти оставался в массиве в
процессе выполнения операций;
   2) какой  интервал  индексов  массива  не использовался для
размещения элементов (6).

   5. Две очереди размещены в одном массиве и растут навстречу
друг другу.  Задана последовательность операций  размещения  и
удаления  элементов  с  указанием  номера очереди.  Обеспечить
выполнение данных операций  и  обработку  аварийных  ситуаций.
Сообщить в конце:
   1) какой минимальный резерв памяти оставался  в  массиве  в
процессе выполнения операций;
   2) какой интервал индексов  массива  не  использовался  для
размещения элементов (6).

   6. Задания  для   выполнения  на компьютере имеют различные
приоритеты, задаваемые цифрами от 1 до 5 (5-высший приоритет).
Для каждого приоритета образуется отдельная очередь. Приоритет
задания  может  меняться.  При  повышении  приоритета  задание
помещается в конец другой очереди, а при понижении - в начало.
Составить программу, обеспечивающую:
   1) выдачу общей очереди;
   2) выдачу очереди заданного приоритета;
   3) перестройку очередей при изменении приоритета (7).

   7. Перед открытием двух железнодорожных касс сформировались
2 очереди пассажиров,  причем некоторые из них находятся сразу
в  обеих очередях.  Для каждого пассажира известны его места в
очередях и необходимое время обслуживания.  Если у какого-либо
пассажира очереди подходят одновременно, то он обслуживается в
первой   кассе.   Промоделировать   работу    касс,    выдавая
последовательно информацию об обслуживании пассажиров (7).

   8. Выборы  старосты  в  группе  студентов  из   M   человек
организованы  по следующим правилам.  Задаются целые числа N и
K.  Студенты становятся по  кругу  в  соответствии  со  своими
номерами в журнале. Начиная от N-го студента отсчитывается K-й
студент.  Счет ведется циклически по возрастанию номеров. Этот
студент   выбывает  из  претендентов.  Начиная  со  следующего
студента,  процедура повторяется. Последний оставшийся студент
становится старостой.  Ввести значения M,  N,  K и найти номер
старосты (7).

   9. В   символьной  строке  записано  выражение  из  букв  и
операций в постфиксной форме (знак операции  после операндов).
Проверить   правильность   записи   и  перевести  выражение  в
инфиксную (обычную)  форму  со  скобками. Например,  выражение
в постфиксной форме как  ab+c*de*- требуется выдать его в виде
(((a+b)*c)-(d*e)). При наличии ошибок указать место  первой из
них. (7).

   10. В  символьной  строке  записано  выражение  из  цифр  и
операций в постфиксной форме (знак операции  после операндов).
Проверить правильность записи и найти значение  выражения. При 
наличии ошибок указать место первой из них.
   Пример: выражение (2+3)*4-5*6  записывается  в  постфиксной
форме как 23+4*56*- (7).

   11. Имеется кольцевая очередь,  заданная массивом, и  стек,
заданный с помощью указателей.  Информационная часть элементов
обеих  структур  идентична.  Обеспечить   операции  включения,
удаления, выдачи элементов  стека  и  очереди.  По  требованию
пользователя исключить из стека элементы, имеющиеся в  очереди
(7).

   12. В файле заданы N упорядоченных по  возрастанию  списков
целых чисел.  Организовать  в  оперативной  памяти  с  помощью 
указателей N линейных списков и слить их в общий список (8).

   13. Данные  о  студенческих  группах  записаны  в  файле  в
следующем виде:
              ----------------------------------
              ¦ Информация ¦  Факультет ¦ Курс ¦
              ¦ о группе   ¦            ¦      ¦
              ----------------------------------
   Организовать с  помощью  указателей  размещение  списка   с
данными о группах в основной памяти так,  чтобы каждый элемент
располагался один раз.  Составить программу выдачи всех  групп
заданного  факультета  либо  заданного курса без перебора всех
элементов (8).

   14. Трассировка  программы,   не   содержащей   рекурсивных
вызовов  и  повторяющихся  имен  процедур,  распечатана в виде
списка выполняемых процедур. Процедура попадает в список, если
к ней произошло обращение из вызывающей процедуры либо возврат
управления из  вызванной  ей  процедуры.  Структура  программы
такова,  что  каждая вызываемая процедура вложена в вызывающую
ее процедуру.  Известен объем памяти,  который  требуется  для
загрузки каждой процедуры.  При выходе из процедуры занимаемая
ей   память   освобождается.   Выяснить,   соответствует    ли
трассировка  правильной  работе  программы.  Определить размер
памяти,  необходимый для работы программы,  и цепочку вызовов,
требующую максимальной памяти (8).

   15. У множества шпионов,  собравшихся вместе для наблюдения
секретного     объекта,    имеется    единственный    бинокль.
Сформировалась очередь на этот  бинокль.  Для  каждого  шпиона
задан   период   наблюдения   в  минутах  и  предельное  время
нахождения в очереди. После наблюдения каждый шпион становится
снова  в  конец  очереди.  Как  только  для какого-либо шпиона
истекает предельное время нахождения в очереди, он покидает ее
(даже  если  в  этот момент владеет биноклем) и отправляется к
резиденту. Вывести протокол наблюдения шпионов за объектом(9).

   16. В   некотором   институте   приобретаемые    компьютеры
выделяются   различным   факультетам  поочередно.  В  пределах
факультетов имеются очереди из кафедр.  Факультет,  получивший
компьютер,  перемещается  в  конец очереди,  а соответствующая
кафедра   исключается   из   факультетской   очереди.    Вновь
организованные факультеты и кафедры занимают последние места в
соответствующих очередях.  Составить программу ведения очереди
на компьютеры (9).

   17. На   узловой   станции  необходимо  менять  направления
движения всех  поездов.  Для  этого  предназначен  специальный
тупик.  Зашедший  в  тупик  последний  поезд  выходит  из него
первым.  Известны  моменты  прихода   поездов   и   минимально
необходимое   время   стоянки (одинаковое  для всех  поездов).
Требуется:
   1) составить расписание стоянки поездов на станции с учетом
смены направления движения;
   2) поменять   между   собой   моменты   прихода   скорых  и
пассажирских  поездов   так,   чтобы   скорые   поезда   имели
минимальное суммарное время простоя в тупике (9).

   18. Организовать  в  основной  памяти с помощью указателей
стек из очередей. Обеспечить   операции   ведения  очереди из
вершины   стека,   расширения   и  сокращения  стека,  выдачи 
содержимого стека (9).

   19. Организовать  в основной  памяти  с помощью указателей
очередь  из  стеков. Обеспечить  операции  ведения  стека  из
начала  очереди, дополнения  и  продвижения  очереди,  выдачи
содержимого очереди (9).

   20. Текст программы на диалекте бейсика включает циклы вида
FOR ID=
 ...............
 ...............
NEXT  ID  ,
где ID-идентификатор параметра цикла.
Требуется:
   1) проверить   правильность    идентификаторов,    задающих
параметры  циклов (не более двух символов;  первый - латинская
буква, а второй, если он имеется, - цифра);
   2) с   помощью  стека  проверить  правильность  вложенности
циклов;
   3) переписать файл с исходным текстом так,  чтобы операторы
цикла каждого последующего уровня вложения  были  сдвинуты  на
две позиции вправо по сравнению с предыдущим уровнем (9).

   21. В   некотором   компиляторе   ПАСКАЛя  текст  программы
включает примечания,  выделенные  фигурными  скобками  '{','}'
либо  парами  символов  '(*'  и  '*)'.  Примечания  могут быть
вложенными друг в друга.  Если примечание открыто знаком  '{',
то оно должно быть закрыто знаком '}'.  Аналогично примечание,
начинающееся с символов '(*'  должно  заканчиваться  символами
'*)'. Требуется:
   1) проверить правильность вложенности примечаний;
   2) переписать   файл   с   исходным   текстом   так,  чтобы
отсутствовала  вложенность  комментариев  при  сохранении   их
содержания  и  в  качестве  ограничивающих  символов  остались
только  фигурные  скобки.   Учесть   случай,   когда   символы
примечаний находятся в апострофах. При некорректности  указать 
номера строки и позиции первой ошибки (10).

   22. На  плоскости  расположена  система  из  N  шестеренок,
которая  приводится  в  движение  вращением  шестеренки  1  по
часовой стрелке.  Сцепленные шестеренки могут вращаться только
в    противоположных    направлениях.   Требуется   определить
направление движения каждой шестеренки  либо  установить,  что
систему   заклинит.   Некоторые   шестеренки   могут  остаться
неподвижными (11).

   23. В строке текстового файла  задано  выражение  из  целых 
чисел и операций '+', '-', '*', '/', '^', SIN, COS, EXP. Порядок
вычислений  определяется  приоритетом  операций   и   круглыми
скобками. Возможен одноместный минус в  начале  выражения  или
после открывающей скобки. Преобразовать выражение в постфиксную
форму (алгоритм Дейкстры) и вычислить его  значение.  Показать 
этапы  выполнения (11).

   24. Имеется  выражение  в  постфиксной  форме,   включающее 
операции '+', '-', '*', '/', '^', ~ (одноместный минус),  SIN, 
COS, EXP.  Переменные  заданы одной строчной латинской буквой.
Запросить значения переменных и вычислить выражение. Представить
его в инфиксной форме со скобками. Лишние скобки присутствовать
не должны (11).

   25. Программа  на ПАСКАЛЕ включает такие сочетания ключевых
слов, как  REPEAT..UNTIL, RECORD..END, CASE..END и BEGIN..END.
Некоторые части программы могут быть  закомментированы, другие
части текста могут представлять собой  константы в апострофах.
Требуется проверить правильность вложенности этих  конструкций
с  учетом  допустимости  взаимных  вложений.  В случае  ошибок
указать номер первой некорректной строки (11).

   26. Программа на ПАСКАЛЕ включает такие  сочетания ключевых
слов,    как    REPEAT..UNTIL,   IF..THEN..ELSE,   BEGIN..END,
RECORD..END. Конец оператора  определяется  точкой  с  запятой 
(";").  Требуется  проверить  правильность  вложенности данных
конструкций с учетом допустимости взаимных вложений. В случае
ошибок указать номер первой некорректной строки (12).