        2.5. Поиск и сортировка данных, перебор вариантов

   1. Имеется  отсортированный   массив  целых  чисел.  Методом 
бинарного поиска обеспечить:
   1) нахождение заданного элемента;
   2) вставку элемента;
   3) удаление элемента (6).

   2. Имеется   файл   записей  с  некоторым  ключевым  полем.
Построить  в  оперативной  памяти  идеально   сбалансированное
бинарное   дерево   поиска   и   обеспечить   поиск  указанных
записей (6).

   3. Имеется  текстовый  файл  записей  с некоторым  ключевым
полем. Выполнить в оперативной памяти сортировку  вставками  с
использованием бинарного поиска. Удалить  повторное  вхождение 
чисел, не используя дополнительной памяти (6).

   4. Составить  программу  хеширования  массива с разрешением
коллизий методом цепочек. Обеспечить поиск и удаление записи с
заданным ключом (7).

   5. В файле задана  строка  из  целых  чисел  через  пробел.
Реализовать следующие функции:
   1) построение бинарной кучи по минимуму;
   2) добавление нового элемента с перестроением кучи;
   3) исключение заданного элемента с перестроением кучи;
   4) изменение значения заданного элемента с перестроением кучи;
   5) выдачу на экран бинарной кучи (8).

   6. В текстовом файле задана последовательность целых чисел.
Отсортировать файл методом естественного  слияния с 4 лентами. 
Удалить повторное вхождение чисел, не используя дополнительной 
памяти. Показать этапы сортировки (8).

   7. Отсортировать бинарный файл методом выбора. Сравнить  по 
скорости с 3-ленточной сортировкой слиянием (9).

   8. Имеется  текстовый  файл  записей  с некоторым  ключевым
полем. Выполнить в оперативной  памяти  турнирную  сортировку.
Показать этапы сортировки (9).

   9. Сравнить  среднее   число   проб   для   поиска  записей
хешированного массива при использовании линейной и квадратичной
пробы в зависимости от процента заполнения  хеш-таблицы с шагом
5 % (9).

   10. Имеется  текстовый  файл  записей с некоторым  ключевым
полем.  Отсортировать файл путем совмещения методов внутренней
сортировки и слияния. Показать этапы сортировки (9).

   11. Имеется  текстовый файл  записей  с  некоторым ключевым
полем.  Отсортировать файл методом сбалансированного слияния с
3 лентами. Показать этапы сортировки (9).

   12. Имеется  текстовый файл  записей  с  некоторым ключевым
полем.  Отсортировать файл методом  поглощения  с  3  лентами. 
Показать этапы сортировки (9).

   13. В файле задана  строка  из  целых  чисел  через  пробел.
Реализовать следующие функции:
   1) построение АВЛ-дерева;
   2) добавление нового элемента с перестроением дерева;
   3) изменение значения заданного элемента с перестроением дерева;
   4) выдачу на экран АВЛ-дерева (10).

   14. В файле задана  строка  из  целых  чисел  через  пробел.
Провести сортировку в оперативной памяти с помощью
   1) бинарного дерева;
   2) АВЛ-дерева.
Сравнить результаты по времени сортировки (10).

   15. Реализовать  эвристический   алгоритм   решения  задачи
коммивояжера на неориентированном полном  графе  на  основании 
метода  Прима  нахождения  остовного дерева. Проиллюстрировать
по шагам этапы поиска (10).

   16. Реализовать  эвристический   алгоритм   решения  задачи
коммивояжера на неориентированном полном  графе  на  основании 
метода Краскала нахождения остовного дерева. Проиллюстрировать
по шагам этапы поиска (10).

   17. В файле имеется телефонный справочник, включающий имена
владельцев телефонов.  Организовать быстрый поиск  по  номерам
телефонов   с   помощью   хеширования.  Обеспечить  дополнение
и удаление записей справочника (11).

   18. В   файле   имеется  информация   о   торговых   связях 
предпринимателей в виде множества пар (A,B), где A - продавец,
а B - покупатель. Общее число предпринимателей не  ограничено.
Часть продавцов являются производителями товаров, а  остальные
перепродают закупленный товар. По новому постановлению,  лица,
перепродающие  товары,  объявлены  спекулянтами.  Требуется на
основе  хеширования  сформировать файл-справочник для быстрого
ответа  на  вопрос,  является  ли   указанный  предприниматель 
продавцом,  покупателем или спекулянтом. Обеспечить дополнение
и удаление информации (11).

   19. Имеется N костей игры домино. На каждой кости имеются 2
числа от 0 до 6. Кости могут повторяться.  Требуется  написать
программу, которая будет определять максимальное число из цифр
на костях цепочки, составленной по правилам домино из имеющихся
костей. Время счета до 1 с.
   Ввод. Первая строка входного файла содержит целое число N – 
количество костей (2 <= N <= 15). Следующие N строк содержат 2
целых числа X и Y (0 <= X, Y <= 6), разделенные пробелом.
   Вывод. В выходной файл необходимо вывести максимальное целое
число, цифры которого соответствуют значению костей в цепочке(11).
   Примеры
Ввод 1         Ввод 2         Ввод 3
3              2              5
1 6            6 6            1 5
0 0            3 6            3 4
2 5                           4 1
                              1 6
                              1 0
Вывод 1        Вывод 2        Вывод 3
61             6663           611443

   20. При  заданном  четном  N  (N  <=  16)  перечислить  все
правильные скобочные формы длины N из скобок '(', ')', '[',']',
'{','}'. Скобки '{}' не должны быть внутри '[]' и '()', а скобки
'[]' не могут быть внутри '()'. Время счета не более 2 сек. (11).
Например, для N=4 правильные формы:
(())
()()
()[]
(){}
[()]
[[]]
[]()
[][]
[]{}
{()}
{[]}
{{}}
{}()
{}[]
{}{}

   21. Квадратное озеро с островами задается матрицей размером
NxN (1<=N<=500).  Каждый элемент матрицы содержит либо  символ
'@' (собака),  обозначающий территорию, которая включает часть
острова,  либо  символ  '.'  (точка),   обозначающий   участок
свободной   воды.   В   левом  верхнем  углу  озера  находится
квадратный плот размером MxM (1<=M<N) клеток. За один шаг плот
может  сдвигаться на одну клетку по горизонтали или вертикали.
В  каждый  момент  плавания  не  должно  быть  общих   клеток,
принадлежащих как плоту,  так и какому-либо острову. Требуется
определить минимальное  число  шагов,  необходимых  для  того,
чтобы плот достиг правого нижнего угла озера.
   Ввод. В первой строке входного файла  INPUT.TXT  содержатся
числа  N  и  M,  разделенные пробелами.  В следующих N строках
находится матрица,  представляющая озеро,  по N подряд  идущих
символов  в  строке.  Подматрица  размером MxM,  находящаяся в
левом верхнем углу,  не содержит островов,  то есть  начальное
положение плота всегда допустимо.
   Вывод. Выходной файл OUTPUT.TXT должен содержать  в  первой
строке  единственное число - количество  необходимых  шагов. В
следующих строках выдается путь перемещения верхнего левого угла
плота в виде последовательности координат  клеток.  Координаты
клетки  задаются двумя числами через пробел,  соответствующими 
номерам  строки  и  столбца. Если правого нижнего угла достичь
невозможно,  то  выходной  файл  должен  содержать  No.  Время 
работы программы не более 1 сек (11). 
   Пример
Ввод
8 2
........
........
.@.@@...
.@.....@
........
.....@..
........
........
Вывод
16
1 1
1 2
1 3
1 4
1 5
1 6
2 6
3 6
4 6
4 5
4 4
5 4
6 4
7 4
7 5
7 6
7 7

   22. Составить   программу  поиска  записи  с  включением  в 
сильно ветвящемся  Б-дереве  порядка N.  Б-дерево  хранится  и
обрабатывается в оперативной памяти (12).

   23. Составить   программу  поиска  записи  с  включением  в 
сильно   ветвящемся   Б-дереве   порядка  N.  Б-дерево  должно 
храниться и обрабатываться в файле с прямым доступом (13).

   24. Имеется   телефонный   справочник   со   сведениями   о
владельцах  телефонов.  Организовать  индексацию  по   номерам
телефонов с помощью построения Б-дерева. Хранить дерево в виде
самостоятельного  файла.  Обеспечить  дополнение,  удаление  и 
корректировку  информации.  Проиллюстрировать   этапы   поиска
информации по заданному номеру телефона (14).