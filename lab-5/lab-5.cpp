//
// 2.5. Поиск и сортировка данных, перебор вариантов
//
//    1. Имеется  отсортированный   массив  целых  чисел.  Методом
// бинарного поиска обеспечить:
//    1) нахождение заданного элемента
//    2) вставку элемента
//    3) удаление элемента (6)
//
// 21. Квадратное озеро с островами задается матрицей размером
// NxN (1<=N<=500).  Каждый элемент матрицы содержит либо  символ
// '@' (собака),  обозначающий территорию, которая включает часть
// острова,  либо  символ  '.'  (точка),   обозначающий   участок
// свободной   воды.   В   левом  верхнем  углу  озера  находится
// квадратный плот размером MxM (1<=M<N) клеток. За один шаг плот
// может  сдвигаться на одну клетку по горизонтали или вертикали.
// В  каждый  момент  плавания  не  должно  быть  общих   клеток,
// принадлежащих как плоту,  так и какому-либо острову. Требуется
// определить минимальное  число  шагов,  необходимых  для  того,
// чтобы плот достиг правого нижнего угла озера.
//    Ввод. В первой строке входного файла  INPUT.TXT  содержатся
// числа  N  и  M,  разделенные пробелами.  В следующих N строках
// находится матрица,  представляющая озеро,  по N подряд  идущих
// символов  в  строке.  Подматрица  размером MxM,  находящаяся в
// левом верхнем углу,  не содержит островов,  то есть  начальное
// положение плота всегда допустимо.
//    Вывод. Выходной файл OUTPUT.TXT должен содержать  в  первой
// строке  единственное число - количество  необходимых  шагов. В
// следующих строках выдается путь перемещения верхнего левого угла
// плота в виде последовательности координат  клеток.  Координаты
// клетки  задаются двумя числами через пробел,  соответствующими
// номерам  строки  и  столбца. Если правого нижнего угла достичь
// невозможно,  то  выходной  файл  должен  содержать  No.  Время
// работы программы не более 1 сек (11).
//
// Глухарев Степан - ПС-21
// C++ (g++ comp.)


#include <algorithm>
#include <fstream>
#include <iostream>
#include <string>

// Функции
void clearTerminal() {
#ifdef _WIN32
  std::system("cls");
#else
  std::system("clear");
#endif
}

void printProgramName(const std::string &programName) {
  const std::string line =
      "════════════════════════════════════════════════════════════════════";
  const std::string text = line + "\n" + programName + "\n" + line;
  std::cout << text << std::endl;
}

std::ifstream openInputFile() {

  std::string fileName;
  std::ifstream file;

  do {
    std::cout << "\nВведите имя файла графа маршрутов: ";
    std::cin >> fileName;

    fileName += ".txt";
    file.open(fileName);

    if (!file.is_open()) {
      std::string errorText =
          "Ошибка: Не удалось открыть файл [ " + fileName + " ]";
      std::cerr << errorText << std::endl;
    }
  } while (!file.is_open());

  std::cout << "Файл [ " << fileName << " ] - успешно открыт" << std::endl;
  return file;
}

std::ofstream openOutputFile() {

  std::string fileName;
  std::ofstream file;

  do {
    std::cout << "\nВведите имя файла вывода: ";
    std::cin >> fileName;

    fileName += ".txt";
    file.open(fileName);

    if (!file.is_open()) {
      std::string errorText =
          "Ошибка: Не удалось открыть файл [ " + fileName + " ]";
      std::cerr << errorText << std::endl;
    }

    std::cout << "Файл [ " << fileName << " ] - успешно открыт" << std::endl;
  } while (!file.is_open());

  return file;
}

// программа
int main() {

  // Объявление констант
  const std::string programName =
      "Программа для работы с отсортированными массивами и нахождения пути \n"
      "на квадратном озере с препятствиями (островами)\n\n"
      "Модули программы:\n"
      "1. Работа с массивом целых чисел:\n"
      "   ▪ Бинарный поиск заданного элемента\n"
      "   ▪ Вставка нового элемента\n"
      "   ▪ Удаление существующего элемента\n"
      "2. Алгоритм перемещения плота по озеру:\n"
      "   ▪ Задача минимизации количества шагов до правого нижнего угла\n"
      "   ▪ Вывод пути перемещения плота\n\n"
      "Программа работает с входными файлами:\n"
      " ▪ input.txt - описание массива или матрицы озера\n"
      "Вывод результата осуществляется в файл out.txt";

  // Приветствуем пользователя
  clearTerminal();
  printProgramName(programName);

  // Объявляем файлы для работы
  std::ifstream inputFile = openInputFile();
  std::ofstream outputFile = openOutputFile();

  // Реализация программы

  // Вывод
  std::cout << "Результаты записаны в файл." << std::endl;
  return 0;
}
